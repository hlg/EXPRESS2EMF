module de.htwdd.expressEMF.step.GenerateStep

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
		bean = StandaloneSetup {

			// TODO: this will have to be refined so that only the ecore or uml for the schema in a particular is available for linking, not everything on the classpath 
			
			scanClassPath = true
			platformUri = rootPath
			uriMap = {
				from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"
				to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.ecore"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.genmodel"
				to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore"
				to = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.ecore"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
				to = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
			}
			
			registerGeneratedEPackage = "org.eclipse.emf.ecore.EcorePackage"
			registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
			registerGeneratedEPackage = "org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage"
			registerGenModelFile = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
			
			/*
			
			uriMap = {
				from = "platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore"
				to = "platform:/resource/org.eclipse.uml2.uml/model/UML.ecore"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.uml2.uml/model/UML.genmodel"
				to = "platform:/resource/org.eclipse.uml2.uml/model/UML.genmodel"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.uml2.types/model/Types.ecore"
				to = "platform:/resource/org.eclipse.uml2.types/model/Types.ecore"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.uml2.types/model/Types.genmodel"
				to = "platform:/resource/org.eclipse.uml2.types/model/Types.genmodel"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.uml2.codegen.ecore/model/GenModel.ecore"
				to = "platform:/resource/org.eclipse.uml2.codegen.ecore/model/GenModel.ecore"
			}
			uriMap = {
				from = "platform:/plugin/org.eclipse.uml2.codegen.ecore/model/GenModel.genmodel"
				to = "platform:/resource/org.eclipse.uml2.codegen.ecore/model/GenModel.genmodel"
			}
			
			registerGeneratedEPackage = "org.eclipse.uml2.uml.UMLPackage"
			registerGenModelFile = "platform:/resource/org.eclipse.uml2.uml/model/UML.genmodel"
			registerGeneratedEPackage = "org.eclipse.uml2.types.TypesPackage"
			registerGenModelFile = "platform:/resource/org.eclipse.uml2.types/model/Types.genmodel"
			registerGeneratedEPackage = "org.eclipse.uml2.codegen.ecore.genmodel.GenModelPackage"
			registerGenModelFile = "platform:/resource/org.eclipse.uml2.codegen.ecore/model/GenModel.genmodel"
	 */
			
	}
	component = org.eclipse.xtext.ecore.EcoreSupport{
		guiceModule = EcoreRuntimeModule {}
	} 
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "de.htwdd.expressEMF.step"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
            	eclipsePluginTest = {
                	enabled = false
            	}
            	runtimeTest = {
                	enabled = true
            	}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "de.htwdd.expressEMF.step.Step"
			fileExtensions = "ifc,spf,p21"
			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
			scopeProvider = {
				ignoreCase = true
			}
		}
	}
	
}
