#using ExpressEMF.*
#using AttrCondDefLibrary.*

 

#abstract #rule ExplicitAttributeToStructuralFeature #with ExpressEMF

#source { 
	e:EntityDecl
	++n: AttributeDecl
}

#target {
	c:EClass  { 
		++ -eStructuralFeatures->s
	}
	++ s:EStructuralFeature {
		++ -eType->cf
		++ -eAnnotations->ea
	}
	++ ea:EAnnotation {
		++ -details-> det
    }
	++ det:EStringToStringMapEntry
	
	cf:EClassifier
}

#correspondence {
	e2c: TypeToClassifier{
		#src->e
		#trg->c
	}
	++ n2s: AttributeDeclToStructuralFeature{
		#src->n
		#trg->s
	}
	
}
#attributeConditions {
	eq_string(n.name, s.name)
	eq_string("Express_emoflon", ea.source)
	eq_string("position", det.key)
	stringToInt(det.value, n.position)
}

#abstract #rule FirstExplicitAttributeToStructuralFeature #extends ExplicitAttributeToStructuralFeature #with ExpressEMF
#source {
	e:EntityDecl {
		++ -attrs-> a
	}
	++a: ExplicitAttr{
		++ -attrs->n
	}
}

#abstract #rule SubsequentExplicitAttributeToStructuralFeature #extends ExplicitAttributeToStructuralFeature #with ExpressEMF
#source {
	e:EntityDecl {
		-attrs-> a
	}
	a: ExplicitAttr{
		++ -attrs->n
	}
}

#abstract #rule ExplicitAttributeToReference #with ExpressEMF
#source{
	d:NamedTypeDecl
}
#target {
	++ s:EReference
	cf:EClass	
}
#correspondence {
	t2cf:TypeToClassifier{
		#src->d
		#trg->cf
	}
}

#abstract #rule ExplicitAttributeToAttribute #with ExpressEMF

#source {
	t:SimpleTypes
}
#target {
	++ s:EAttribute
	cf:EDataType
}
#correspondence {
	t2cf:SimpleTypeToDataType {
		#src->t
		#trg->cf
	}
}

#abstract #rule ExplicitAttributeToAttributeEnum #with ExpressEMF

#source {
	ut:TypeDecl {
		-underlying->ue
	}
	ue:EnumerationType
}
#target {
	++ s:EAttribute
	cf:EEnum
}
#correspondence {
	t2cf:TypeToClassifier {
		#src->ut
		#trg->cf
	}
}

#abstract #rule FirstExplicitAggregateAttributeToReference #extends FirstExplicitAttributeToStructuralFeature, ExplicitAttributeToReference #with ExpressEMF
#source {
	++a: ExplicitAttr{
		++ -type->g
	}
	++ g: GeneralAggregationTypes {
		++ -type->t
	}
	++ t:NamedTypes {
		++ -decl->d
	} 
	d:NamedTypeDecl
}
#target{
	++s:EReference
}
#attributeConditions{
	eq_int(-1, s.upperBound)
}

#abstract #rule FirstExplicitAttributeToReference #extends FirstExplicitAttributeToStructuralFeature, ExplicitAttributeToReference #with ExpressEMF
#source {
	++ a: ExplicitAttr{
		++ -type->t
	}
	++ t:NamedTypes {
		++ -decl->d
	} 
	d:NamedTypeDecl
}

#rule FirstExplicitAttributeToContainedReference #extends FirstExplicitAttributeToReference, ContainedReference #with ExpressEMF

#rule FirstExplicitAttributeToSelfcontainedReference #extends FirstExplicitAttributeToReference, SelfcontainedReference #with ExpressEMF

#abstract #rule SelfcontainedReference #with ExpressEMF

#source {
	d:EntityDecl
}

#abstract #rule ContainedReference #with ExpressEMF
#source {
	d:TypeDecl
}
#target {
	++s:EReference
}
#attributeConditions{
	eq_boolean(true, s.containment)
}



#rule FirstExpliciteListAttributeToReference #extends FirstExplicitAggregateAttributeToReference #with ExpressEMF
#source {
	++ g: GeneralListType
}
#rule FirstExpliciteSetAttributeToReference #extends FirstExplicitAggregateAttributeToReference #with ExpressEMF
#source {
	++ g: GeneralSetType
}

#rule FirstExplicitAttributeToAttribute #extends FirstExplicitAttributeToStructuralFeature, ExplicitAttributeToAttribute #with ExpressEMF
#source {
	++ a: ExplicitAttr{
		++ -type->t
	}
	t:SimpleTypes
}

#rule FirstExplicitAttributeToAttributeEnum #extends FirstExplicitAttributeToStructuralFeature, ExplicitAttributeToAttributeEnum #with ExpressEMF
#source {
	++ a: ExplicitAttr{
		++ -type->t
	}
	++t:NamedTypes{
		++-decl->ut
	}
}

#abstract #rule SubsequentExplicitAttributeToReference #extends SubsequentExplicitAttributeToStructuralFeature, ExplicitAttributeToReference #with ExpressEMF
#source {
	a: ExplicitAttr{
		-type->t
	}
	t:NamedTypes {
		-decl->d
	} 
	d:NamedTypeDecl
}

#rule SubsequentExplicitAttributeToContainedReference #extends SubsequentExplicitAttributeToReference, ContainedReference #with ExpressEMF

#rule SubsequentExplicitAttributeToSelfcontainedReference #extends SubsequentExplicitAttributeToReference, SelfcontainedReference #with ExpressEMF


#rule SubsequentExplicitAttributeToAttribute #extends SubsequentExplicitAttributeToStructuralFeature, ExplicitAttributeToAttribute #with ExpressEMF
#source {
	a: ExplicitAttr{
		-type->t
	}
	t:SimpleTypes // TODO check, maybe not necessary, target side distinction enough because existing t/cf correspondence
}

#rule SubsequentExplicitAttributeToAttributeEnum #extends SubsequentExplicitAttributeToStructuralFeature, ExplicitAttributeToAttributeEnum #with ExpressEMF
#source {
	a: ExplicitAttr{
		-type->t
	}
	t:NamedTypes{
		-decl->ut
	}
}

/*
*/